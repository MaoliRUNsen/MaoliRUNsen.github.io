<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Python之王</title>
  
  <subtitle>Python之王</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://maolirunsen.github.io/"/>
  <updated>2020-07-20T02:58:32.488Z</updated>
  <id>https://maolirunsen.github.io/</id>
  
  <author>
    <name>Runsen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>3、新手Jupyter不会用，我十招教你盘她</title>
    <link href="https://maolirunsen.github.io/2020/07/20/3%E3%80%81%E6%96%B0%E6%89%8BJupyter%E4%B8%8D%E4%BC%9A%E7%94%A8%EF%BC%8C%E6%88%91%E5%8D%81%E6%8B%9B%E6%95%99%E4%BD%A0%E7%9B%98%E5%A5%B9/"/>
    <id>https://maolirunsen.github.io/2020/07/20/3%E3%80%81%E6%96%B0%E6%89%8BJupyter%E4%B8%8D%E4%BC%9A%E7%94%A8%EF%BC%8C%E6%88%91%E5%8D%81%E6%8B%9B%E6%95%99%E4%BD%A0%E7%9B%98%E5%A5%B9/</id>
    <published>2020-07-20T02:58:32.488Z</published>
    <updated>2020-07-20T02:58:32.488Z</updated>
    
    <content type="html"><![CDATA[<p>@Author ： By Runsen</p><a id="more"></a><p>上次教大家搭建好了Jupyter，并学习了一些conda命令。如果你是新手，Jupyter不会用，那么我教你盘她</p><h1 id="1、官方文档"><a href="#1、官方文档" class="headerlink" title="1、官方文档"></a>1、官方文档</h1><p>安装好了anaconda只好，大家应该见到这些玩意，还有一个spider我删除了，有Pycharm就可以不要spider了。我这里的jupyter是设置了deeplearn为默认环境，所以有jupyter后面多了deeplearn。<br><img src="https://img-blog.csdnimg.cn/20200510230541144.png" alt=""></p><p>我们点击那个Navigator，等一下就可以下面的图片了。</p><p><img src="https://img-blog.csdnimg.cn/20200510230905927.png" alt=""><br>我们选择learning，点击jupyter就可以看文档了。大家学习都是要这样，先去官方文档。</p><p><img src="https://img-blog.csdnimg.cn/2020051023101055.png" alt=""></p><p>浏览器就来到了：<a href="https://jupyter.org/documentation.html">https://jupyter.org/documentation.html</a></p><p><img src="https://img-blog.csdnimg.cn/20200510231149252.png" alt=""></p><p>然后，我们点击jupyter notebook</p><p>来到官方文档：<a href="https://jupyter-notebook.readthedocs.io/en/stable/">https://jupyter-notebook.readthedocs.io/en/stable/</a></p><p>读英文不行啊，建议大家安装Chrome，直接翻译中文简体。</p><p><img src="https://img-blog.csdnimg.cn/20200510231403855.png" alt=""><br>这里建议停留十分钟，大家把jupyter的官方文档看一遍，再继续看下面。</p><h1 id="2、创建一个jupter-notebook"><a href="#2、创建一个jupter-notebook" class="headerlink" title="2、创建一个jupter notebook"></a>2、创建一个jupter notebook</h1><p>下面，我们就真正开始学习Jupyter ，我不想抄官方文档，就把自己的经验那出来算了。</p><p>该页面是启动之后默认打开的页面。我们可以看到当前目录下已有的文件，可以查看已有的jupyter 文件(灰色表示未在运行，绿色表示正在运行)，可以点击查看子目录下的内容，jupyter 默认访问的是8888端口</p><p><img src="https://img-blog.csdnimg.cn/2020051023215453.png" alt=""></p><p>创建一个jupter notebook非常的简单，点击右侧的New，选择Python3会在新的页面中建立一个未命名的notebook文件，选择Text File会新的页面中建立一个未命名的txt文件，选择Folder会在当前页面中建立一个未命名文件夹，选择Terminal会在新的页面中建立Terminal。</p><p><img src="https://img-blog.csdnimg.cn/20200510232402410.png" alt=""></p><p>下面就是新建的内容<br><img src="https://img-blog.csdnimg.cn/20200510232421600.png" alt=""></p><p>重命名直接点击文件名就可以了。</p><p><img src="https://img-blog.csdnimg.cn/20200510232528566.png" alt=""></p><p>可以在左侧进行勾选，对文件夹进行重命名，移动或删除，对文件进行复制，重命名，移动，编辑和删除。</p><p><img src="https://img-blog.csdnimg.cn/20200510232642912.png" alt=""></p><p><img src="https://img-blog.csdnimg.cn/20200510232757852.png" alt=""><br>如果这个后台删除了，那么你就访问不了你的jupyter了。</p><h1 id="3、-Notebook使用"><a href="#3、-Notebook使用" class="headerlink" title="3、 Notebook使用"></a>3、 Notebook使用</h1><p>下面，教大家学习一下Notebook使用<br>、<img src="https://img-blog.csdnimg.cn/20200510233001843.png" alt=""></p><p>现在我们在help中点击Notebook help，来到了官方的教程，建议你还是看一看。</p><p><img src="https://img-blog.csdnimg.cn/20200510233259224.png" alt=""></p><p>官方的教程的网页<br><img src="https://img-blog.csdnimg.cn/20200510233449759.png" alt=""></p><h1 id="4、-编辑模式"><a href="#4、-编辑模式" class="headerlink" title="4、 编辑模式"></a>4、 编辑模式</h1><p>每一个cell有两种模式：命令模式和编辑模式。</p><p><img src="https://img-blog.csdnimg.cn/20200510234214589.png" alt=""></p><p>如下图所示：最左侧是蓝色的条是命令模式，是绿色的条表示编辑模式(此时cell中有光标，可以进行代码编写)。在命令模式下，按下enter或者鼠标单击代码框可以进入编辑模式。在编辑模式下，按下esc或者鼠标单击代码框左侧区域即可进入命令模式。</p><p><img src="https://img-blog.csdnimg.cn/20200510234332838.png" alt=""></p><p>在编辑模式下，按住SHIFT+ENTER就可以运行代码了。</p><h1 id="5、命令模式"><a href="#5、命令模式" class="headerlink" title="5、命令模式"></a>5、命令模式</h1><p>命令模式就是使用Markdown。</p><p><img src="https://img-blog.csdnimg.cn/20200510234800502.png" alt=""></p><p><img src="https://img-blog.csdnimg.cn/20200510235339934.png" alt=""></p><p>在命令模式下，可以按住下面的键，实现下面的效果。</p><ul><li><p>按下A：向上增加空白的cell</p></li><li><p>按下B：向下增加空白的cell</p></li><li><p>按下D两次（DD）：删除该cell</p></li><li><p>按下X：剪贴该cell</p></li><li><p>按下V：粘贴该cell</p></li><li><p>按下L：打开、关闭行号</p></li></ul><ul><li><p>按下M：进入Markdown模式</p></li><li><p>按下Y：退出Markdown模式，回到代码编辑模式</p></li></ul><p>当进入Markdown模式的时候，cell左边的 In【】会消失掉</p><h1 id="6、Markdown语法"><a href="#6、Markdown语法" class="headerlink" title="6、Markdown语法"></a>6、Markdown语法</h1><p>我直接把CSDN上的Markdown给你搬过来。</p><p>下面是常见的快捷键</p><p><img src="https://img-blog.csdnimg.cn/20200510235521475.png" alt=""></p><p>目录，标题和文本样式</p><p><img src="https://img-blog.csdnimg.cn/20200510235912274.png" alt=""></p><p><img src="https://img-blog.csdnimg.cn/20200511000002261.png" alt=""></p><p>我觉得你还是写博客直接看CSDN的帮助文档算了。</p><h1 id="6、Latex数学公式"><a href="#6、Latex数学公式" class="headerlink" title="6、Latex数学公式"></a>6、Latex数学公式</h1><p>Latex我不想写了，直接看我之前的文章</p><p><a href="https://maoli.blog.csdn.net/article/details/105377233">手把手教你插入数学公式，妈妈再也不用担心我写不了论文了</a></p><h1 id="7、Notebook小技巧"><a href="#7、Notebook小技巧" class="headerlink" title="7、Notebook小技巧"></a>7、Notebook小技巧</h1><p>这篇文写得不错，总结了Notebook的27个小技巧，文章链接：<a href="http://liuchengxu.org/pelican-blog/jupyter-notebook-tips.html。这是原创，大家不要看那些转载的。">http://liuchengxu.org/pelican-blog/jupyter-notebook-tips.html。这是原创，大家不要看那些转载的。</a></p><h1 id="8、保存文件"><a href="#8、保存文件" class="headerlink" title="8、保存文件"></a>8、保存文件</h1><p>我们新建的名字叫ipynb，为什么我喜欢用Jupyter，就是因为可以保存很多类型的文件，比如pdf，html，markdowm，latex。</p><p><img src="https://img-blog.csdnimg.cn/20200510233632667.png" alt=""></p><h1 id="9、误删了怎么恢复"><a href="#9、误删了怎么恢复" class="headerlink" title="9、误删了怎么恢复"></a>9、误删了怎么恢复</h1><p> 直接在一个单元格中输入：history （如图）<br>就会展示出历史代码（前提是你运行过的，否则不会打印出来）</p><p><img src="https://img-blog.csdnimg.cn/20200511000624937.png" alt=""></p><h1 id="10、大招"><a href="#10、大招" class="headerlink" title="10、大招"></a>10、大招</h1><p>我把大招留在最后，就是你遇到不会的模块怎么办</p><p>遇到代码不会怎么办？</p><p><img src="https://img-blog.csdnimg.cn/20200511001045804.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20200511001207980.png" alt=""><br>@Author ： By Runsen</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;@Author ： By Runsen&lt;/p&gt;
    
    </summary>
    
    
      <category term="Jupyter" scheme="https://maolirunsen.github.io/categories/Jupyter/"/>
    
    
      <category term="Python环境" scheme="https://maolirunsen.github.io/tags/Python%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>2、搭建JupyterNotebook环境</title>
    <link href="https://maolirunsen.github.io/2020/07/20/2%E3%80%81%E6%90%AD%E5%BB%BAJupyterNotebook%E7%8E%AF%E5%A2%83/"/>
    <id>https://maolirunsen.github.io/2020/07/20/2%E3%80%81%E6%90%AD%E5%BB%BAJupyterNotebook%E7%8E%AF%E5%A2%83/</id>
    <published>2020-07-20T02:58:27.457Z</published>
    <updated>2020-07-20T02:58:27.457Z</updated>
    
    <content type="html"><![CDATA[<p>@Author ： By Runsen</p><a id="more"></a><p>搭建Jupyter Notebook环境（二）</p><h1 id="1、Jupyter-notebook历史"><a href="#1、Jupyter-notebook历史" class="headerlink" title="1、Jupyter notebook历史"></a>1、Jupyter notebook历史</h1><p>Jupyter 创始人 Fernando Pérez 的说法，他最初的梦想是做一个综合 Ju （Julia）、Py （Python）和 R 三种科学运算语言的计算工具平台，所以将其命名为 Ju-Py-te-R。发展到现在，Jupyter 已经成为一个几乎支持所有语言，能够把软件代码、计算输出、解释文档、多媒体资源整合在一起的多功能科学运算平台。</p><p>在Pycham中只能运行一共py文件，而在Jupyter notebook可以运行一行代码就可以了。</p><h1 id="2-、环境搭建"><a href="#2-、环境搭建" class="headerlink" title="2 、环境搭建"></a>2 、环境搭建</h1><p>你可以直接是通过 pip 命令安装。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clike">pip install jupyter<br></code></pre></td></tr></table></figure><p>你也可以下载anaconda</p><p>   Anaconda官网下载链接：<a href="https://www.anaconda.com/distribution/#download-section，选择Python3版本的安装包下载即可">https://www.anaconda.com/distribution/#download-section，选择Python3版本的安装包下载即可</a></p><p><img src="https://img-blog.csdnimg.cn/20200510224126168.png" alt=""></p><p>   如果下载速度过慢，可以选择安装Anaconda的清华镜像，网址<a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive">https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive</a></p><p>  下载完成之后，直接双击安装包安装即可。安装后添加清华镜像源解决conda install 下载速度慢的问题，打开Anaconda Prompt命令行，依次添加命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs clike">conda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;free&#x2F;<br>conda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;cloud&#x2F;conda-forge&#x2F;<br>conda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;cloud&#x2F;msys2&#x2F;<br>conda config --set show_channel_urls yes<br></code></pre></td></tr></table></figure><p>之前说清华源，不适应了，现在OK，可以使用清华源</p><h1 id="3、-conda常见命令"><a href="#3、-conda常见命令" class="headerlink" title="3、 conda常见命令"></a>3、 conda常见命令</h1><p>conda不仅可以方便安装，更新，卸载工具包，而且安装时能自动安装相应的依赖包。conda命令多数时候是在配置虚拟环境时使用，下面是conda常见命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">conda list              //查看当前的包<br>conda search request    //查找request库<br>conda install request   //安装request库<br>conda uninstall request //删除request库<br>conda update request    //更新request库<br></code></pre></td></tr></table></figure><p>很多时候不同的库依赖不同的依赖包，需要创建虚拟环境，下面是conda创建虚拟环境的常用命令</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql">conda info <span class="hljs-comment">--envs       //查看安装好的环境</span><br><span class="hljs-comment"># deeplearn代指克隆得到的新环境的名称，base代指被克隆的环境的名称</span><br>conda <span class="hljs-keyword">create</span> <span class="hljs-comment">--name deeplearn --clone base</span><br><span class="hljs-comment"># 激活虚拟环境</span><br><span class="hljs-keyword">activate</span> envname //<span class="hljs-keyword">for</span> windows<br><span class="hljs-keyword">source</span> <span class="hljs-keyword">activate</span> envname //<span class="hljs-keyword">for</span> liunx <span class="hljs-keyword">and</span> mac<br><span class="hljs-comment"># 退出虚拟坏境</span><br>deactivate<br><span class="hljs-comment">#查看当前的包</span><br>conda <span class="hljs-keyword">list</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200510225507691.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs clik">#查看安装好的环境<br>conda info --envs<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200510225537392.png" alt=""></p><h1 id="4、虚拟环境搭建"><a href="#4、虚拟环境搭建" class="headerlink" title="4、虚拟环境搭建"></a>4、虚拟环境搭建</h1><p>   在创建的虚拟环境上运行jupyter notebook,但发现在notebook中的python其实并没有运行在指定的虚拟环境引擎上，只需要安装nb_conda_kernels插件即可解决，注意是在base环境下安装，而不是虚拟环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clike">(base) conda install nb_conda_kernels<br></code></pre></td></tr></table></figure><p>安装成功后，在kernel -&gt; change kernel中即可切换到指定的虚拟环境</p><p><img src="https://img-blog.csdnimg.cn/20200510224404138.png" alt=""><br>你可以可以新建Notebook的时候设置kernel </p><p><img src="https://img-blog.csdnimg.cn/20200510224300139.png" alt=""></p><h1 id="5、-修改jupyter-notebook的打开路径"><a href="#5、-修改jupyter-notebook的打开路径" class="headerlink" title="5、 修改jupyter notebook的打开路径"></a>5、 修改jupyter notebook的打开路径</h1><p>安装好jupyter notebook 后打开的是默认文档位置，需要来修改存放文件的路径。</p><p>下面教大家修改jupyter notebook的打开路径</p><p>打开jupyter notebook 文件所在的位置</p><p><img src="https://img-blog.csdnimg.cn/20190217140534777.png" alt=""><br> 右键， 打开属性<br> <img src="https://img-blog.csdnimg.cn/2019021714085440.png" alt=""></p><p>按照下图配置参数<br><img src="https://img-blog.csdnimg.cn/2019021714135627.png" alt=""><br>这样打开jupyter notebook就不是默认文档位置了。</p><p><img src="https://img-blog.csdnimg.cn/20200510224701876.png" alt=""></p><h1 id="6、-pip-和conda的区别"><a href="#6、-pip-和conda的区别" class="headerlink" title="6、 pip 和conda的区别"></a>6、 pip 和conda的区别</h1><p>conda可以让你同时管理安装处理有关的python任务和跟python无关任务，即pip可以允许在任何环境中安装 python包，conda允许你在conda环境中安装任何语言包（包括C语言或者python）。</p><p>conda使用一个新的包格式，你不能交替使用conda和pip，</p><p>因为pip不能安装和解析conda的包格式。可以使用这两个工具，但是它们是不能交互的。</p><p>conda安装库是在一个地方，而且需要根据Python的环境和依赖库而定，比如numpy的版本有的过高，导致安装这个库使用的时候报错。</p><p>pip安装就是根据Python的版本而定，有的时候conda安装不了，可以采用pip安装。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;@Author ： By Runsen&lt;/p&gt;
    
    </summary>
    
    
      <category term="Jupyter" scheme="https://maolirunsen.github.io/categories/Jupyter/"/>
    
    
      <category term="Jupyter Notebook环境" scheme="https://maolirunsen.github.io/tags/Jupyter-Notebook%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>1、搭建Python环境和安装Pycharm</title>
    <link href="https://maolirunsen.github.io/2020/07/20/1%E3%80%81%E6%90%AD%E5%BB%BAPython%E7%8E%AF%E5%A2%83%E5%92%8C%E5%AE%89%E8%A3%85Pycharm/"/>
    <id>https://maolirunsen.github.io/2020/07/20/1%E3%80%81%E6%90%AD%E5%BB%BAPython%E7%8E%AF%E5%A2%83%E5%92%8C%E5%AE%89%E8%A3%85Pycharm/</id>
    <published>2020-07-20T02:23:16.722Z</published>
    <updated>2020-07-20T02:23:16.722Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p>1、 搭建Python的基础环境</p><p>@Author ： By Runsen</p><h1 id="1、-搭建Python的基础环境"><a href="#1、-搭建Python的基础环境" class="headerlink" title="1、 搭建Python的基础环境"></a>1、 搭建Python的基础环境</h1><p>安装python的基础环境。</p><p>首先，我们需要访问Python官网：<a href="https://www.python.org/。">https://www.python.org/。</a></p><p><img src="https://img-blog.csdnimg.cn/20200510185558709.png" alt=""></p><p>目前Python更新到3.8.2版本，这里我不建议大家安装Python3.8.2版本，而是选择安装Python3.6或者3.7稳定版。</p><p><img src="https://img-blog.csdnimg.cn/20200510185650725.png" alt=""></p><p>下载后，双击下载包exe，进入 Python 安装向导，安装非常简单，你只需要使用默认的设置一直点击”下一步”直到安装完成即可，但是要记住在安装的过程需要选择“ADD Python3.6 to PATH”，这样是为了添加Python到环境变量。</p><p><img src="https://img-blog.csdnimg.cn/20200510185704207.png" alt=""></p><p>如果你选择的是默认安装而不是自定义安装，可以忽略以下步骤，如下图这页默认全选，点击Next</p><p><img src="https://img-blog.csdnimg.cn/20200510185725205.png" alt=""></p><p>如下图，打对勾的保持默认即可，下面红框是选择安装路径，其实我选择自定义安装的目的就是不想把程序安装在c盘，点击Install 等待安装完成</p><p><img src="https://img-blog.csdnimg.cn/20200510185750708.png" alt=""><br>下面这个就是安装成功了，安装成功，我们就点击关闭就可以了close</p><p><img src="https://img-blog.csdnimg.cn/20200510185806525.png" alt=""></p><p>那截止到这这个环境是安装好了是吧，那接下来我们是不是Python环境验证一下。我们用win+R打开命令窗口， 输入cmd点击确定。</p><p><img src="https://img-blog.csdnimg.cn/20200510185819568.png" alt="在这里插入图片描述"></p><p>查看python版本，如下图可以看到是我们上面所安装的python 3.6.7</p><p><img src="https://img-blog.csdnimg.cn/2020051018584552.png" alt=""><br>python3.6之后版本都是有pip的，pip是Python安装包的管理工具，如下图可以看到安装python3.6.7之后就有了pip，如果是 command not found 那说明没有安装。</p><p><img src="https://img-blog.csdnimg.cn/20200510185900328.png" alt=""></p><p>下面，我们在命令窗口中，输入python，打开python最原始的交互环境，打印一个hello python，也就是print(“hello python)</p><p><img src="https://img-blog.csdnimg.cn/20200510185913497.png" alt="在这里插入图片描"></p><p>在这里输完之后直接点击回车，点击回车之后，然后Python执行我们的语句。打印这个hello python<br>在这里，window系统Python安装完毕。</p><h1 id="2、-安装Pycharm"><a href="#2、-安装Pycharm" class="headerlink" title="2、 安装Pycharm"></a>2、 安装Pycharm</h1><p><img src="https://img-blog.csdnimg.cn/20200510190124221.png" alt=""></p><p>选择下载window版本的Pycharm。</p><p><img src="https://img-blog.csdnimg.cn/20200510190145246.png" alt=""></p><p>下载完成后，我们点击exe文件进行安装，安装会弹出下面界面，我们直接选择Next</p><p><img src="https://img-blog.csdnimg.cn/20200510190158960.png" alt=""></p><p>下面界面就是选择安装目录。我们尽量不要默认安装，默认安装它是装C盘里了，你自己安装路径。但是注意注意有一点：安装路径千万不要中文。如果有中文的话可能会出问题。</p><p><img src="https://img-blog.csdnimg.cn/20200510190219685.png" alt=""></p><p>然后点击下一步选择安装路径之后，点击下一步。<br>下一步完之后，它告诉你什么，创建一个桌面程序，它是64位的还是32位的，其实这里面不用多选<br>基本都是64位的操作系统。</p><p><img src="https://img-blog.csdnimg.cn/20200510190300112.png" alt="在这里插入图片描"><br>点击下一步，我们不需要修改名字，直接点击install安装。</p><p><img src="https://img-blog.csdnimg.cn/20200510190316166.png" alt=""></p><p>下面就是等待安装完成这个过程，不用管就等就行了，然后这就是安装完成了。</p><p><img src="https://img-blog.csdnimg.cn/20200510190333204.png" alt=""><br>然后双击我们第一次使用PyCharm双击它，完之后弹出来一个小框，这个小框当中它是做什么的，就告诉我们是不是导入一些基本设置。我们第一次用之前也没有设置，那么就不导入了，直接就是do not，选择这个，然后OK。</p><p><img src="https://img-blog.csdnimg.cn/20200510190352416.png" alt=""></p><p>OK完，这里边必须要让你同意服务条款，这边是什么都不用管了。把右侧的这个滚动条滑到最底部<br>点击accept同意这个按钮。</p><p><img src="https://img-blog.csdnimg.cn/2020051019041190.png" alt=""></p><p>下面，写一个Hello Python程序。</p><p>我们点击create new project，这个是创建一个新的项目</p><p><img src="https://img-blog.csdnimg.cn/2020051019043439.png" alt=""></p><p>创建新的项目之后，这里面就要输入我们项目的存储路径以及项目名称了。那么我这里边直接把最后一个字段去改掉。其实这个就是我们自己的一个名称了。这个项目路径和项目名称添加完之后，你自己起名字就可以，然后我就在这里边点击create了，就开始创建了</p><p><img src="https://img-blog.csdnimg.cn/20200510190501557.png" alt=""></p><p>我们接下来，和上一次一样的操作。第一步在我们自己的项目名称，项目名称的那里面，点击右键这是第一步，第二步，把鼠标指针挪到new上，选择new。第三步，然后点击python file，创建一个python文件</p><p><img src="https://img-blog.csdnimg.cn/20200510190525196.png" alt=""></p><p>我们的代码就要写到这个文件里，然后输入hello，这hello其实是这个文件名字</p><p><img src="https://img-blog.csdnimg.cn/20200510190542698.png" alt=""><br>然后点击OK，点击完OK之后呈现到大家面前是这么样的页面，它分两个区域，一个是python文件列表区域</p><p>这个其实是我们项目的所有的文件列表，现在我们只创建了一个文件叫hello.py。然后还有就是代码编写区域<br>，我们所有代码都要在代码编写区域当中来进行写。</p><p><img src="https://img-blog.csdnimg.cn/20200510190607666.png" alt=""></p><p>那么这里我们要做什么，输入跟我们之前输的那个东西是一样的，也是那行代码print(“hello Python”)。输入完之后右键在空白区域，空白区域右键就可以了，它会弹出来这么一个框是吧。在这个框我们点击 RunHello，跑一下这个代码，在你的IDE的最下面就会出现hello Python</p><p><img src="https://img-blog.csdnimg.cn/20200510190625398.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;1、 搭建Python的基础环境&lt;/p&gt;
&lt;p&gt;@Author ： By Runsen&lt;/p&gt;
&lt;h1 id=&quot;1、-搭建Python的基础环境&quot;&gt;&lt;a href=&quot;#1、-搭建Python的基础环境&quot; class=&quot;headerlink
      
    
    </summary>
    
    
      <category term="Python" scheme="https://maolirunsen.github.io/categories/Python/"/>
    
    
      <category term="Python环境" scheme="https://maolirunsen.github.io/tags/Python%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
</feed>
